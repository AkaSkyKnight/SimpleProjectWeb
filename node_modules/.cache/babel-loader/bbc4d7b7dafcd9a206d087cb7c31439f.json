{"ast":null,"code":"import Backendless from 'backendless';\nimport t from '../action-types';\nimport { getPersons } from '../reducers';\nexport var loadPersons = function loadPersons() {\n  return {\n    types: [t.LOAD_PERSONS, t.LOAD_PERSONS_SUCCESS, t.LOAD_PERSONS_FAIL],\n    apiCall: function apiCall() {\n      return Backendless.Data.of('Person').find();\n    }\n  };\n};\nexport var createPerson = function createPerson(person) {\n  return {\n    types: [null, t.CREATE_PERSON_SUCCESS, null],\n    apiCall: function apiCall() {\n      return Backendless.Data.of('Person').save(person);\n    }\n  };\n};\nexport var updatePerson = function updatePerson(person) {\n  return function (dispatch, getState) {\n    var persons = getPersons(getState()).list;\n    var prevPerson = persons.find(function (p) {\n      return p.objectId === person.objectId;\n    });\n    return dispatch({\n      person: person,\n      prevPerson: prevPerson,\n      types: [t.UPDATE_PERSON, t.UPDATE_PERSON_SUCCESS, t.UPDATE_PERSON_FAIL],\n      apiCall: function apiCall() {\n        return Backendless.Data.of('Person').save(person);\n      }\n    });\n  };\n};\nexport var removePerson = function removePerson(personId) {\n  return {\n    personId: personId,\n    types: [null, t.REMOVE_PERSON_SUCCESS, null],\n    apiCall: function apiCall() {\n      return Backendless.Data.of('Person').remove(personId);\n    }\n  };\n};\nexport var onPersonCreate = function onPersonCreate(person) {\n  return {\n    person: person,\n    type: t.ON_PERSON_CREATE\n  };\n};\nexport var onPersonUpdate = function onPersonUpdate(person) {\n  return {\n    person: person,\n    type: t.ON_PERSON_UPDATE\n  };\n};\nexport var onPersonRemove = function onPersonRemove(person) {\n  return {\n    person: person,\n    type: t.ON_PERSON_REMOVE\n  };\n};","map":{"version":3,"sources":["/home/devilgatsu/Desktop/SimpleProject-Fiap-Web-Development/src/store/actions/pessoas.js"],"names":["Backendless","t","getPersons","loadPersons","types","LOAD_PERSONS","LOAD_PERSONS_SUCCESS","LOAD_PERSONS_FAIL","apiCall","Data","of","find","createPerson","person","CREATE_PERSON_SUCCESS","save","updatePerson","dispatch","getState","persons","list","prevPerson","p","objectId","UPDATE_PERSON","UPDATE_PERSON_SUCCESS","UPDATE_PERSON_FAIL","removePerson","personId","REMOVE_PERSON_SUCCESS","remove","onPersonCreate","type","ON_PERSON_CREATE","onPersonUpdate","ON_PERSON_UPDATE","onPersonRemove","ON_PERSON_REMOVE"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,aAAxB;AAEA,OAAOC,CAAP,MAAc,iBAAd;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAO;AAChCC,IAAAA,KAAK,EAAI,CAACH,CAAC,CAACI,YAAH,EAAiBJ,CAAC,CAACK,oBAAnB,EAAyCL,CAAC,CAACM,iBAA3C,CADuB;AAEhCC,IAAAA,OAAO,EAAE;AAAA,aAAMR,WAAW,CAACS,IAAZ,CAAiBC,EAAjB,CAAoB,QAApB,EAA8BC,IAA9B,EAAN;AAAA;AAFuB,GAAP;AAAA,CAApB;AAKP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,MAAM;AAAA,SAAK;AACrCT,IAAAA,KAAK,EAAI,CAAC,IAAD,EAAOH,CAAC,CAACa,qBAAT,EAAgC,IAAhC,CAD4B;AAErCN,IAAAA,OAAO,EAAE;AAAA,aAAMR,WAAW,CAACS,IAAZ,CAAiBC,EAAjB,CAAoB,QAApB,EAA8BK,IAA9B,CAAmCF,MAAnC,CAAN;AAAA;AAF4B,GAAL;AAAA,CAA3B;AAKP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAAAH,MAAM;AAAA,SAAI,UAACI,QAAD,EAAWC,QAAX,EAAwB;AAC5D,QAAMC,OAAO,GAAGjB,UAAU,CAACgB,QAAQ,EAAT,CAAV,CAAuBE,IAAvC;AACA,QAAMC,UAAU,GAAGF,OAAO,CAACR,IAAR,CAAa,UAAAW,CAAC;AAAA,aAAIA,CAAC,CAACC,QAAF,KAAeV,MAAM,CAACU,QAA1B;AAAA,KAAd,CAAnB;AAEA,WAAON,QAAQ,CAAC;AACdJ,MAAAA,MAAM,EAANA,MADc;AAEdQ,MAAAA,UAAU,EAAVA,UAFc;AAGdjB,MAAAA,KAAK,EAAI,CAACH,CAAC,CAACuB,aAAH,EAAkBvB,CAAC,CAACwB,qBAApB,EAA2CxB,CAAC,CAACyB,kBAA7C,CAHK;AAIdlB,MAAAA,OAAO,EAAE;AAAA,eAAMR,WAAW,CAACS,IAAZ,CAAiBC,EAAjB,CAAoB,QAApB,EAA8BK,IAA9B,CAAmCF,MAAnC,CAAN;AAAA;AAJK,KAAD,CAAf;AAMD,GAViC;AAAA,CAA3B;AAYP,OAAO,IAAMc,YAAY,GAAG,SAAfA,YAAe,CAAAC,QAAQ;AAAA,SAAK;AACvCA,IAAAA,QAAQ,EAARA,QADuC;AAEvCxB,IAAAA,KAAK,EAAI,CAAC,IAAD,EAAOH,CAAC,CAAC4B,qBAAT,EAAgC,IAAhC,CAF8B;AAGvCrB,IAAAA,OAAO,EAAE;AAAA,aAAMR,WAAW,CAACS,IAAZ,CAAiBC,EAAjB,CAAoB,QAApB,EAA8BoB,MAA9B,CAAqCF,QAArC,CAAN;AAAA;AAH8B,GAAL;AAAA,CAA7B;AAMP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAAlB,MAAM;AAAA,SAAK;AACvCA,IAAAA,MAAM,EAANA,MADuC;AAEvCmB,IAAAA,IAAI,EAAE/B,CAAC,CAACgC;AAF+B,GAAL;AAAA,CAA7B;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAArB,MAAM;AAAA,SAAK;AACvCA,IAAAA,MAAM,EAANA,MADuC;AAEvCmB,IAAAA,IAAI,EAAE/B,CAAC,CAACkC;AAF+B,GAAL;AAAA,CAA7B;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAvB,MAAM;AAAA,SAAK;AACvCA,IAAAA,MAAM,EAANA,MADuC;AAEvCmB,IAAAA,IAAI,EAAE/B,CAAC,CAACoC;AAF+B,GAAL;AAAA,CAA7B","sourcesContent":["import Backendless from 'backendless'\n\nimport t from '../action-types';\nimport { getPersons } from '../reducers';\n\nexport const loadPersons = () => ({\n  types  : [t.LOAD_PERSONS, t.LOAD_PERSONS_SUCCESS, t.LOAD_PERSONS_FAIL],\n  apiCall: () => Backendless.Data.of('Person').find(),\n});\n\nexport const createPerson = person => ({\n  types  : [null, t.CREATE_PERSON_SUCCESS, null],\n  apiCall: () => Backendless.Data.of('Person').save(person),\n});\n\nexport const updatePerson = person => (dispatch, getState) => {\n  const persons = getPersons(getState()).list\n  const prevPerson = persons.find(p => p.objectId === person.objectId)\n\n  return dispatch({\n    person,\n    prevPerson,\n    types  : [t.UPDATE_PERSON, t.UPDATE_PERSON_SUCCESS, t.UPDATE_PERSON_FAIL],\n    apiCall: () => Backendless.Data.of('Person').save(person),\n  })\n};\n\nexport const removePerson = personId => ({\n  personId,\n  types  : [null, t.REMOVE_PERSON_SUCCESS, null],\n  apiCall: () => Backendless.Data.of('Person').remove(personId),\n});\n\nexport const onPersonCreate = person => ({\n  person,\n  type: t.ON_PERSON_CREATE,\n});\n\nexport const onPersonUpdate = person => ({\n  person,\n  type: t.ON_PERSON_UPDATE,\n});\n\nexport const onPersonRemove = person => ({\n  person,\n  type: t.ON_PERSON_REMOVE,\n});\n"]},"metadata":{},"sourceType":"module"}